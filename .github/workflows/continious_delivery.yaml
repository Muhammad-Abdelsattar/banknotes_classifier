on:
  push:
    tags:
      - "banknotes_classifier@v*"

jobs:
  CD:
    runs-on: self-hosted
    env:
      PYTHON_VERSION: '3.10.12'
      DOCKER_IMAGE_NAME: 'muhammadabdalsattar/banknotes_classifier'

    steps:
      # Step 1: Checkout the codebase with full history and tags
      - name: Checkout Code
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          fetch-tags: true
          token: ${{ secrets.PAT }}

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Log in to Docker Hub
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 5: Generate Docker image tag from pushed tag version
      - name: Generate Image Tag
        id: generate_image_tag
        run: |
          version=$(echo "${GITHUB_REF_NAME}" | grep -oE '[0-9]+$')
          echo "image_tag=${{ env.DOCKER_IMAGE_NAME }}:v${version}" >> "$GITHUB_OUTPUT"

      # Step 6: Configure DVC for Google Drive remote
      - name: Configure DVC
        run: |
          echo -E '${{ secrets.GDRIVE_CREDENTIALS_DATA }}' > creds.json
          dvc remote add -d -f myremote gdrive://1IdooJif1hoyvpqVNU8zjniOqhMus1Js4
          dvc remote modify myremote gdrive_use_service_account true
          dvc remote modify myremote gdrive_acknowledge_abuse true
          dvc remote modify myremote --local gdrive_service_account_json_file_path creds.json

      # Step 7: Pull the model file from DVC
      - name: Download Model
        run: dvc pull artifacts/model.onnx

      # Step 8: Build and push Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.generate_image_tag.outputs.image_tag }}