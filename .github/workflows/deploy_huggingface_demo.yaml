on:
  pull_request:
    types: [opened, reopened]
    branches:
      - dev
jobs:
  pr_to_dev:
    runs-on: self-hosted
    env:
      PYTHON_VERSION: '3.10.12'
    
      # Step 1: Checkout code with full history and tags
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
        token: ${{ secrets.PAT }}

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    # Step 3: Install dependencies
    - name: Install Dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create New Hugging Face Space
      id: create_hf_space
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        HF_USERNAME: ${{ secrets.HF_USERNAME }}
      run: |
        # Define the Space name based on the input provided
        BRANCH_NAME="${{ github.head_ref }}"
        BRANCH_PREFIX=$(echo "$BRANCH_NAME" | cut -d'/' -f1)
        BRANCH_SUFFIX=$(echo "$BRANCH_NAME" | cut -d'/' -f2-)
        echo "Reached point 0"
        LATEST_TAG=$(git tag -l "$BRANCH_SUFFIX"\* | sort -V | tail -n 1)
        echo "Reached point 1"
        if [ -n "$LATEST_TAG" ]; then
          echo "Reached point 2"
          CURRENT_VERSION=$(echo "$LATEST_TAG" | grep -oE '[0-9]+$')
          SPACE_NAME="$BRANCH_SUFFIX-v$CURRENT_VERSION"
        else
          echo "No existing tag found."
          exit 1
        fi
        python .github/workflows/helpers/hf_spaces.py create-space \
          --space-name $SPACE_NAME \
          --user-name $HF_USERNAME \
          --token $HF_TOKEN \
          --space-sdk gradio
        echo "SPACE_NAME=$SPACE_NAME" >> "$GITHUB_OUTPUT"


    - name: configure dvc
      run: |
        echo -E '${{ secrets.GDRIVE_CREDENTIALS_DATA }}' > creds.json
        cat creds.json
        dvc remote add -d -f myremote gdrive://1IdooJif1hoyvpqVNU8zjniOqhMus1Js4
        dvc remote modify myremote gdrive_use_service_account true
        dvc remote modify myremote gdrive_acknowledge_abuse true 
        dvc remote modify myremote --local gdrive_service_account_json_file_path creds.json 

    - name: Download Model
      run: |
        dvc pull artifacts/model.onnx

    - name: Upload App
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        HF_USERNAME: ${{ secrets.HF_USERNAME }}
      run: |
        # Ensure the target artifacts directory exists in the demo_app structure
        mkdir -p deployment/demo_app/artifacts
        # Copy the specific model file
        cp artifacts/model.onnx deployment/demo_app/artifacts/model.onnx
        python .github/workflows/helpers/hf_spaces.py upload-folder \
          --space-name ${{ steps.create_hf_space.outputs.SPACE_NAME }} \
          --folder-path deployment/demo_app/ \
          --path-in-repo . \
          --user-name $HF_USERNAME \
          --token $HF_TOKEN \
          
          # Add a comment to the PR to signal that a space was created.
          latest_pr_num=$(gh pr list --head "${{ github.head_ref }}" --base dev --state open --json number -q '.[0].number')
          echo "## Demo APP" >> demo_app.md
          echo "**A Demo App on HuggingFace Spaces was automatically created.**">> demo_app.md
          echo " You can Try the app using the link below. " >> demo_app.md
          echo "![**Demo App**](https://huggingface.co/spaces/$HF_USERNAME/"${{ steps.create_hf_space.outputs.SPACE_NAME }}")" >> demo_app.md
          gh pr comment $latest_pr_num\ 
          --body "$(cat demo_app.md)"